openapi: 3.0.3
info:
  title: Kownsl - advices and approvals
  version: 0.1.1
  description: |2

    Manage case-oriented advices and approvals.

    Kownsl allows you to store review requests on a case with (a subset of) its documents,
    and present the review requests to assignees. The advice or approval from reviewers
    is subsequently again stored in Kownsl.

    This component publishes notifications on the `kownsl` channel.
  contact:
    url: https://github.com/GemeenteUtrecht/kownsl
  license:
    name: UNLICENSED
paths:
  /api/v1/review-requests:
    get:
      operationId: review_requests_list
      description: |-
        CRUD operations on review requests.

        Note that the list endpoint _requires_ a filter parameter.
      summary: List review requests
      parameters:
      - in: query
        name: for_zaak
        schema:
          type: string
          format: uri
        description: URL reference to the zaak in the API.
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: requester
        schema:
          type: string
        description: Username of requester that is filtered on.
      tags:
      - review-requests
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSummaryReviewRequestList'
          description: ''
    post:
      operationId: review_requests_create
      description: |-
        CRUD operations on review requests.

        Note that the list endpoint _requires_ a filter parameter.
      summary: Create a review request
      tags:
      - review-requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
        required: true
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewRequest'
          description: ''
  /api/v1/review-requests/{request__uuid}/advices:
    get:
      operationId: review_requests_advices_list
      description: |-
        Manage advices for a given review request.

        Advices can only be created if the end-user has not submitted an advice yet and they
        are listed in the user deadlines.
      summary: List advices
      parameters:
      - in: path
        name: request__uuid
        schema:
          type: string
          format: uuid
        description: ID of the parent review request.
        required: true
      tags:
      - advices
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Advice'
          description: ''
    post:
      operationId: review_requests_advices_create
      description: |-
        Manage advices for a given review request.

        Advices can only be created if the end-user has not submitted an advice yet and they
        are listed in the user deadlines.
      summary: Register an advice
      parameters:
      - in: path
        name: request__uuid
        schema:
          type: string
          format: uuid
        description: ID of the parent review request.
        required: true
      tags:
      - advices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Advice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Advice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Advice'
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advice'
          description: ''
  /api/v1/review-requests/{request__uuid}/advices/{id}:
    get:
      operationId: review_requests_advices_retrieve
      description: |-
        Manage advices for a given review request.

        Advices can only be created if the end-user has not submitted an advice yet and they
        are listed in the user deadlines.
      summary: Retrieve advice details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this advies.
        required: true
      - in: path
        name: request__uuid
        schema:
          type: string
          format: uuid
        description: ID of the parent review request.
        required: true
      tags:
      - advices
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advice'
          description: ''
    put:
      operationId: review_requests_advices_update
      description: |-
        Manage advices for a given review request.

        Advices can only be created if the end-user has not submitted an advice yet and they
        are listed in the user deadlines.
      summary: Replace an advice
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this advies.
        required: true
      - in: path
        name: request__uuid
        schema:
          type: string
          format: uuid
        description: ID of the parent review request.
        required: true
      tags:
      - advices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Advice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Advice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Advice'
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advice'
          description: ''
    patch:
      operationId: review_requests_advices_partial_update
      description: |-
        Manage advices for a given review request.

        Advices can only be created if the end-user has not submitted an advice yet and they
        are listed in the user deadlines.
      summary: Update an advice
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this advies.
        required: true
      - in: path
        name: request__uuid
        schema:
          type: string
          format: uuid
        description: ID of the parent review request.
        required: true
      tags:
      - advices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdvice'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdvice'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdvice'
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Advice'
          description: ''
    delete:
      operationId: review_requests_advices_destroy
      description: |-
        Manage advices for a given review request.

        Advices can only be created if the end-user has not submitted an advice yet and they
        are listed in the user deadlines.
      summary: Destroy an advice
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this advies.
        required: true
      - in: path
        name: request__uuid
        schema:
          type: string
          format: uuid
        description: ID of the parent review request.
        required: true
      tags:
      - advices
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/review-requests/{request__uuid}/approvals:
    get:
      operationId: review_requests_approvals_list
      description: |-
        Manage approvals for a given review request.

        Approvals can only be created if the end-user has not submitted an approval yet and
        they are listed in the user deadlines.
      summary: List approvals
      parameters:
      - in: path
        name: request__uuid
        schema:
          type: string
          format: uuid
        description: ID of the parent review request.
        required: true
      tags:
      - approvals
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Approval'
          description: ''
    post:
      operationId: review_requests_approvals_create
      description: |-
        Manage approvals for a given review request.

        Approvals can only be created if the end-user has not submitted an approval yet and
        they are listed in the user deadlines.
      summary: Register an approval
      parameters:
      - in: path
        name: request__uuid
        schema:
          type: string
          format: uuid
        description: ID of the parent review request.
        required: true
      tags:
      - approvals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Approval'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Approval'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Approval'
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
          description: ''
  /api/v1/review-requests/{request__uuid}/approvals/{id}:
    get:
      operationId: review_requests_approvals_retrieve
      description: |-
        Manage approvals for a given review request.

        Approvals can only be created if the end-user has not submitted an approval yet and
        they are listed in the user deadlines.
      summary: Retrieve approval details
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this accordering.
        required: true
      - in: path
        name: request__uuid
        schema:
          type: string
          format: uuid
        description: ID of the parent review request.
        required: true
      tags:
      - approvals
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
          description: ''
    put:
      operationId: review_requests_approvals_update
      description: |-
        Manage approvals for a given review request.

        Approvals can only be created if the end-user has not submitted an approval yet and
        they are listed in the user deadlines.
      summary: Replace an approval
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this accordering.
        required: true
      - in: path
        name: request__uuid
        schema:
          type: string
          format: uuid
        description: ID of the parent review request.
        required: true
      tags:
      - approvals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Approval'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Approval'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Approval'
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
          description: ''
    patch:
      operationId: review_requests_approvals_partial_update
      description: |-
        Manage approvals for a given review request.

        Approvals can only be created if the end-user has not submitted an approval yet and
        they are listed in the user deadlines.
      summary: Update an approval
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this accordering.
        required: true
      - in: path
        name: request__uuid
        schema:
          type: string
          format: uuid
        description: ID of the parent review request.
        required: true
      tags:
      - approvals
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedApproval'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedApproval'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedApproval'
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
          description: ''
    delete:
      operationId: review_requests_approvals_destroy
      description: |-
        Manage approvals for a given review request.

        Approvals can only be created if the end-user has not submitted an approval yet and
        they are listed in the user deadlines.
      summary: Destroy an approval
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this accordering.
        required: true
      - in: path
        name: request__uuid
        schema:
          type: string
          format: uuid
        description: ID of the parent review request.
        required: true
      tags:
      - approvals
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/review-requests/{uuid}:
    get:
      operationId: review_requests_retrieve
      description: |-
        CRUD operations on review requests.

        Note that the list endpoint _requires_ a filter parameter.
      summary: Retrieve review request details
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - review-requests
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewRequest'
          description: ''
    put:
      operationId: review_requests_update
      description: |-
        CRUD operations on review requests.

        Note that the list endpoint _requires_ a filter parameter.
      summary: Replace a review request
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - review-requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
        required: true
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewRequest'
          description: ''
    patch:
      operationId: review_requests_partial_update
      description: |-
        CRUD operations on review requests.

        Note that the list endpoint _requires_ a filter parameter.
      summary: Update a review request
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - review-requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReviewRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReviewRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReviewRequest'
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewRequest'
          description: ''
    delete:
      operationId: review_requests_destroy
      description: |-
        CRUD operations on review requests.

        Note that the list endpoint _requires_ a filter parameter.
      summary: Destroy a review request
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - review-requests
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/review-requests/count:
    get:
      operationId: review_requests_count_retrieve
      description: |-
        CRUD operations on review requests.

        Note that the list endpoint _requires_ a filter parameter.
      summary: Count number of review requests.
      tags:
      - review-requests
      security:
      - ZGWAuthentication: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountReviewRequest'
          description: ''
components:
  schemas:
    Advice:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
          description: Author of the review
        group:
          type: string
          default: ''
          description: Group for which the user has submitted the review.
        advice:
          type: string
          description: Het inhoudelijke advies
          maxLength: 1000
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentAdvice'
          description: (New) versions of documents that were uploaded as part of the
            advice round.
      required:
      - author
      - created
    Approval:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
          description: Author of the review
        group:
          type: string
          default: ''
          description: Group for which the user has submitted the review.
        approved:
          type: boolean
          description: Vink dit aan om akkoord te gaan met het/de document(en).
        toelichting:
          type: string
          description: Voeg een toelichting toe aan de accordering.
      required:
      - author
      - created
    CountReviewRequest:
      type: object
      properties:
        count:
          type: integer
          description: Count number of review requests by user.
      required:
      - count
    DocumentAdvice:
      type: object
      properties:
        content:
          type: string
          format: binary
          writeOnly: true
          description: Content of file
        size:
          type: integer
          writeOnly: true
          description: Size of file
          minimum: 0
        name:
          type: string
          writeOnly: true
          description: Name of file
        document:
          type: string
          format: uri
          description: URL-referentie naar het brondocument in de Documenten API.
            Deze mag de 'versie' querystring parameter bevatten.
          maxLength: 1000
        editedDocument:
          type: string
          format: uri
          writeOnly: true
          description: URL reference to Documenten API document, including `?versie=`
            parameter.
        sourceVersion:
          type: integer
          readOnly: true
        adviceVersion:
          type: integer
          readOnly: true
      required:
      - adviceVersion
      - document
      - sourceVersion
    PaginatedSummaryReviewRequestList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/SummaryReviewRequest'
    PatchedAdvice:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
          description: Author of the review
        group:
          type: string
          default: ''
          description: Group for which the user has submitted the review.
        advice:
          type: string
          description: Het inhoudelijke advies
          maxLength: 1000
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentAdvice'
          description: (New) versions of documents that were uploaded as part of the
            advice round.
    PatchedApproval:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
          description: Author of the review
        group:
          type: string
          default: ''
          description: Group for which the user has submitted the review.
        approved:
          type: boolean
          description: Vink dit aan om akkoord te gaan met het/de document(en).
        toelichting:
          type: string
          description: Voeg een toelichting toe aan de accordering.
    PatchedReviewRequest:
      type: object
      properties:
        assignedUsers:
          type: object
          additionalProperties: {}
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          format: uuid
          readOnly: true
        documents:
          type: array
          items:
            type: string
            format: uri
        forZaak:
          type: string
          format: uri
          description: URL reference to the zaak in the API.
          maxLength: 1000
        frontendUrl:
          type: string
          readOnly: true
          description: The frontend URL for reviewers to submit their review.
        isBeingReconfigured:
          type: boolean
          description: Indication that shows if the review request is currently being
            reconfigured.
        lockReason:
          type: string
          description: Reason why the review request was locked.
        locked:
          type: boolean
          description: Locking the review request prevents further reviewing.
        metadata:
          type: object
          additionalProperties: {}
          description: Metadata that may be relevant for the process.
        numAdvices:
          type: integer
          readOnly: true
          description: The number of advices registered for this request.
        numApprovals:
          type: integer
          readOnly: true
          description: The number of approvals registered for this request. Note that
            does not mean they are all positive approvals - this includes the rejections.
        numAssignedUsers:
          type: integer
          readOnly: true
        openReviews:
          type: array
          items:
            type: object
            additionalProperties:
              oneOf:
              - type: string
              - type: array
                items:
                  type: string
          readOnly: true
          description: Deadlines and users of open reviewers. Sorted on earliest deadlines
            first.
        toelichting:
          type: string
        userDeadlines:
          type: object
          additionalProperties: {}
          readOnly: true
        requester:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        reviewType:
          $ref: '#/components/schemas/ReviewTypeEnum'
        reviews:
          type: array
          items:
            type: object
            additionalProperties: {}
          readOnly: true
          description: Previous advices or approvals.
        zaakDocuments:
          type: array
          items:
            $ref: '#/components/schemas/ZaakDocument'
          readOnly: true
          description: The documents with their download url and relevant metadata.
    ReviewRequest:
      type: object
      properties:
        assignedUsers:
          type: object
          additionalProperties: {}
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          format: uuid
          readOnly: true
        documents:
          type: array
          items:
            type: string
            format: uri
        forZaak:
          type: string
          format: uri
          description: URL reference to the zaak in the API.
          maxLength: 1000
        frontendUrl:
          type: string
          readOnly: true
          description: The frontend URL for reviewers to submit their review.
        isBeingReconfigured:
          type: boolean
          description: Indication that shows if the review request is currently being
            reconfigured.
        lockReason:
          type: string
          description: Reason why the review request was locked.
        locked:
          type: boolean
          description: Locking the review request prevents further reviewing.
        metadata:
          type: object
          additionalProperties: {}
          description: Metadata that may be relevant for the process.
        numAdvices:
          type: integer
          readOnly: true
          description: The number of advices registered for this request.
        numApprovals:
          type: integer
          readOnly: true
          description: The number of approvals registered for this request. Note that
            does not mean they are all positive approvals - this includes the rejections.
        numAssignedUsers:
          type: integer
          readOnly: true
        openReviews:
          type: array
          items:
            type: object
            additionalProperties:
              oneOf:
              - type: string
              - type: array
                items:
                  type: string
          readOnly: true
          description: Deadlines and users of open reviewers. Sorted on earliest deadlines
            first.
        toelichting:
          type: string
        userDeadlines:
          type: object
          additionalProperties: {}
          readOnly: true
        requester:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        reviewType:
          $ref: '#/components/schemas/ReviewTypeEnum'
        reviews:
          type: array
          items:
            type: object
            additionalProperties: {}
          readOnly: true
          description: Previous advices or approvals.
        zaakDocuments:
          type: array
          items:
            $ref: '#/components/schemas/ZaakDocument'
          readOnly: true
          description: The documents with their download url and relevant metadata.
      required:
      - created
      - forZaak
      - frontendUrl
      - id
      - numAdvices
      - numApprovals
      - numAssignedUsers
      - openReviews
      - requester
      - reviewType
      - reviews
      - userDeadlines
      - zaakDocuments
    ReviewTypeEnum:
      enum:
      - advice
      - approval
      type: string
    SummaryReviewRequest:
      type: object
      properties:
        assignedUsers:
          type: object
          additionalProperties: {}
        completed:
          type: integer
          readOnly: true
          description: The number of completed requests.
        id:
          type: string
          format: uuid
          readOnly: true
        isBeingReconfigured:
          type: boolean
          description: Indication that shows if the review request is currently being
            reconfigured.
        forZaak:
          type: string
          format: uri
          description: URL reference to the zaak in the API.
          maxLength: 1000
        lockReason:
          type: string
          description: Reason why the review request was locked.
        locked:
          type: boolean
          description: Locking the review request prevents further reviewing.
        numAdvices:
          type: integer
          readOnly: true
          description: The number of advices registered for this request.
        numApprovals:
          type: integer
          readOnly: true
          description: The number of approvals registered for this request. Note that
            does not mean they are all positive approvals - this includes the rejections.
        numAssignedUsers:
          type: integer
          readOnly: true
        openReviews:
          type: array
          items:
            type: object
            additionalProperties:
              oneOf:
              - type: string
              - type: array
                items:
                  type: string
          readOnly: true
          description: Deadlines and users of open reviewers. Sorted on earliest deadlines
            first.
        requester:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        reviews:
          type: array
          items:
            type: object
            additionalProperties: {}
          readOnly: true
          description: Previous advices or approvals.
        reviewType:
          $ref: '#/components/schemas/ReviewTypeEnum'
        userDeadlines:
          type: object
          additionalProperties: {}
      required:
      - completed
      - forZaak
      - id
      - numAdvices
      - numApprovals
      - numAssignedUsers
      - openReviews
      - requester
      - reviewType
      - reviews
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer.
          maxLength: 150
        firstName:
          type: string
          maxLength: 255
        lastName:
          type: string
          maxLength: 255
        fullName:
          type: string
          description: The full name of the requesting user.
      required:
      - fullName
      - username
    ZaakDocument:
      type: object
      properties:
        bronorganisatie:
          type: string
        identificatie:
          type: string
        downloadUrl:
          type: string
          readOnly: true
          description: URL to download the document
        name:
          type: string
          readOnly: true
        extra:
          type: string
          readOnly: true
        title:
          type: string
          readOnly: true
      required:
      - bronorganisatie
      - downloadUrl
      - extra
      - identificatie
      - name
      - title
  securitySchemes:
    ZGWAuthentication:
      type: http
      in: beader
      bearerFormat: JWT
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
